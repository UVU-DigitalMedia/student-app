angular.module("studentApp",["ionic","cordovaInit","loading","alert","studentApp.states","studentApp.controllers","studentApp.services"]),angular.module("studentApp.controllers",[]),angular.module("studentApp.services",[]),angular.module("studentApp.states",["ionic"]).config(["$stateProvider","$urlRouterProvider","$httpProvider",function(t,n,o){o.defaults.withCredentials=!0,t.state("tab",{url:"/tab","abstract":!0,templateUrl:"partials/tabs.html"}).state("tab.login",{url:"/login",views:{"tab-login":{templateUrl:"partials/tabs/login.html",controller:"LoginCtrl"}}}).state("tab.question",{url:"/question",views:{"tab-login":{templateUrl:"partials/tabs/question.html",controller:"QuestionCtrl"}}}),n.otherwise("/tab/login")}]),angular.module("studentApp.controllers").controller("LoginCtrl",["$scope","$state","student","loading","alert",function(t,n,o,e,r){o.logout().catch(function(){console.log(arguments)}),t.login=function(t){e.load(),o.login(t).then(function(t){return t.success?o.question():void console.error(t)}).finally(function(){e.unload()}).then(function(t){return t.question?void n.go("tab.question"):r("You have answered all available questions. Check back later!")})}}]),angular.module("studentApp.controllers").controller("QuestionCtrl",["$scope","$state","student",function(t,n){t.logout=function(){n.go("tab.login")}}]),angular.module("alert",["ionic"]).factory("alert",["$ionicPopup",function(t){return function(n){return t.alert({title:n})}}]),angular.module("cordovaInit",["ionic"]).run(["$ionicPlatform",function(t){t.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),window.StatusBar&&StatusBar.styleDefault()})}]),angular.module("loading",["ionic"]).factory("loading",["$ionicLoading",function(t){return{load:function(n){n=n||"Loading...",t.show({template:n})},unload:function(){t.hide()}}}]),angular.module("studentApp.services").factory("student",["$http","alert","$q",function(t,n,o){function e(t){return t.data}var r="http://localhost:3000/v1",u={};return t.get(r).error(function(){n("Could not connect to server")}),u.current=function(){return t.get(r+"/student/current").then(e)},u.login=function(n){return n?t.post(r+"/student/"+n+"/login").then(e):o(function(t,n){n(new Error("No UVID given"))})},u.logout=function(){return t.post(r+"/student/logout").then(e)},u.question=function(){return t.get(r+"/student/question").then(e)},u}]);
//# sourceMappingURL=../maps/app-1.0.0.min.js.map