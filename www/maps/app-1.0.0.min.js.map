{"version":3,"sources":["app.js","states.js","controllers/login.js","controllers/question.js","modules/alert.js","modules/cordova-init.js","modules/loading.js","services/student.js"],"names":[],"mappings":"AAAA,QAAA,OAAA,cACA,QACA,cACA,UACA,QACA,oBACA,yBACA,wBAGA,QAAA,OAAA,6BACA,QAAA,OAAA,0BCXA,QAAA,OAAA,qBAAA,UACA,QAAA,iBAAA,qBAAA,gBAAA,SAAA,EAAA,EAAA,GAEA,EAAA,SAAA,iBAAA,EAMA,EAGA,MAAA,OACA,IAAA,OACA,YAAA,EACA,YAAA,uBAKA,MAAA,aACA,IAAA,SACA,OACA,aACA,YAAA,2BACA,WAAA,gBAKA,MAAA,gBACA,IAAA,YACA,OACA,aACA,YAAA,8BACA,WAAA,mBAmCA,EAAA,UAAA,iBCtEA,QAAA,OAAA,0BACA,WAAA,aAAA,SAAA,SAAA,UAAA,UAAA,SAAA,EAAA,EAAA,EAAA,GAEA,EAAA,SAAA,MAAA,WACA,QAAA,IAAA,aAGA,EAAA,MAAA,SAAA,GACA,EAAA,OACA,EAAA,MAAA,GAAA,KAAA,SAAA,GACA,EAAA,QACA,EAAA,GAAA,gBAEA,QAAA,MAAA,KAGA,QAAA,EAAA,YChBA,QAAA,OAAA,0BACA,WAAA,gBAAA,SAAA,SAAA,UAAA,QAAA,SAAA,EAAA,EAAA,EAAA,GAEA,EAAA,QAEA,EAAA,OAAA,WACA,EAAA,GAAA,cAGA,EAAA,WAAA,KAAA,SAAA,GACA,IAAA,EAAA,SAAA,CACA,GAAA,GAAA,8DACA,OAAA,GAAA,GAAA,KAAA,EAAA,QAEA,EAAA,SAAA,EAAA,WAGA,EAAA,OAAA,SAAA,GACA,MAAA,OAAA,EACA,EAAA,4BAEA,UAAA,EACA,GAAA,KAAA,EAAA,KAAA,MACA,EAAA,cACA,GAAA,MACA,EAAA,UAAA,EAAA,KAAA,QAAA,OAEA,GAAA,OAAA,EAAA,SAAA,IAAA,GAAA,KAAA,WACA,EAAA,WACA,MAAA,SAAA,GACA,QAAA,MAAA,UC9BA,QAAA,OAAA,SAAA,UACA,QAAA,SAAA,cAAA,SAAA,GACA,MAAA,UAAA,GACA,MAAA,GAAA,OAAA,MAAA,QCHA,QAAA,OAAA,eAAA,UACA,KAAA,iBAAA,SAAA,GACA,EAAA,MAAA,WAGA,OAAA,SAAA,OAAA,QAAA,QAAA,UACA,QAAA,QAAA,SAAA,0BAAA,GAEA,OAAA,WAEA,UAAA,oBCVA,QAAA,OAAA,WAAA,UACA,QAAA,WAAA,gBAAA,SAAA,GACA,OACA,KAAA,SAAA,GACA,EAAA,GAAA,aACA,EAAA,MAAA,SAAA,KAEA,OAAA,WACA,EAAA,YCRA,QAAA,OAAA,uBACA,QAAA,WAAA,QAAA,QAAA,KAAA,SAAA,EAAA,EAAA,GAqCA,QAAA,GAAA,GACA,MAAA,GAAA,KArCA,GAAA,GAAA,2BACA,IAuCA,OArCA,GAAA,IAAA,GAAA,MAAA,WACA,EAAA,iCAGA,EAAA,QAAA,WACA,MAAA,GAAA,IAAA,EAAA,oBAAA,KAAA,IAGA,EAAA,MAAA,SAAA,GACA,MAAA,GAKA,EAAA,KAAA,EAAA,YAAA,EAAA,UAAA,KAAA,GAJA,EAAA,SAAA,EAAA,GACA,EAAA,GAAA,OAAA,qBAMA,EAAA,OAAA,WACA,MAAA,GAAA,KAAA,EAAA,mBAAA,KAAA,IAGA,EAAA,SAAA,WACA,MAAA,GAAA,IAAA,EAAA,qBAAA,KAAA,IAGA,EAAA,OAAA,SAAA,EAAA,GAIA,MAHA,gBAAA,KACA,EAAA,OAAA,KAAA,GAAA,OAAA,SAAA,GAAA,MAAA,MAEA,EAAA,KAAA,EAAA,mBAAA,GAAA,MAAA,IACA,KAAA,IAOA","file":"app-1.0.0.min.js","sourcesContent":["angular.module('studentApp', [\n  'ionic',\n  'cordovaInit',\n  'loading',\n  'alert',\n  'studentApp.states',\n  'studentApp.controllers',\n  'studentApp.services'\n]);\n\nangular.module('studentApp.controllers', []);\nangular.module('studentApp.services', []);\n","angular.module('studentApp.states', ['ionic'])\n.config(function ($stateProvider, $urlRouterProvider, $httpProvider) {\n\n  $httpProvider.defaults.withCredentials = true;\n\n  // Ionic uses AngularUI Router which uses the concept of states\n  // Learn more here: https://github.com/angular-ui/ui-router\n  // Set up the various states which the app can be in.\n  // Each state's controller can be found in controllers.js\n  $stateProvider\n\n    // setup an abstract state for the tabs directive\n    .state('tab', {\n      url: '/tab',\n      abstract: true,\n      templateUrl: 'partials/tabs.html'\n    })\n\n    // Each tab has its own nav history stack:\n\n    .state('tab.login', {\n      url: '/login',\n      views: {\n        'tab-login': {\n          templateUrl: 'partials/tabs/login.html',\n          controller: 'LoginCtrl'\n        }\n      }\n    })\n\n    .state('tab.question', {\n      url: '/question',\n      views: {\n        'tab-login': {\n          templateUrl: 'partials/tabs/question.html',\n          controller: 'QuestionCtrl'\n        }\n      }\n    });\n\n    // .state('tab.friends', {\n    //   url: '/friends',\n    //   views: {\n    //     'tab-friends': {\n    //       templateUrl: 'partials/tabs/friends.html',\n    //       controller: 'FriendsCtrl'\n    //     }\n    //   }\n    // })\n    // .state('tab.friend-detail', {\n    //   url: '/friend/:friendId',\n    //   views: {\n    //     'tab-friends': {\n    //       templateUrl: 'partials/tabs/friend-detail.html',\n    //       controller: 'FriendDetailCtrl'\n    //     }\n    //   }\n    // })\n    //\n    // .state('tab.account', {\n    //   url: '/account',\n    //   views: {\n    //     'tab-account': {\n    //       templateUrl: 'partials/tabs/account.html',\n    //       controller: 'AccountCtrl'\n    //     }\n    //   }\n    // });\n\n  // if none of the above states are matched, use this as the fallback\n  $urlRouterProvider.otherwise('/tab/login');\n});\n","angular.module('studentApp.controllers')\n.controller('LoginCtrl', function ($scope, $state, student, loading) {\n\n  student.logout().catch(function (err) {\n    console.log(arguments);\n  });\n\n  $scope.login = function (uvid) {\n    loading.load();\n    student.login(uvid).then(function (data) {\n      if (data.success) {\n        $state.go('tab.question');\n      } else {\n        console.error(data);\n      }\n    })\n    .finally(loading.unload);\n  };\n\n});\n","angular.module('studentApp.controllers')\n.controller('QuestionCtrl', function ($scope, $state, student, alert) {\n\n  $scope.data = {};\n\n  $scope.logout = function () {\n    $state.go('tab.login');\n  };\n\n  student.question().then(function (res) {\n    if (!res.question) {\n      var msg = 'You have no new questions to answer. Check back again later!';\n      return alert(msg).then($scope.logout);\n    }\n    $scope.question = res.question;\n  });\n\n  $scope.submit = function (value) {\n    if (value == null) {\n      return alert('You must select a value');\n    }\n    if (value === 'Other') {\n      value += ': ' + $scope.data.other;\n    } else if (value.Other) {\n      delete value.Other;\n      value['Other: ' + $scope.data.other] = true;\n    }\n    student.answer($scope.question._id, value).then(function (res) {\n      $scope.logout();\n    }).catch(function (err) {\n      console.error(err);\n    });\n  };\n\n});\n","angular.module('alert', ['ionic'])\n.factory('alert', function ($ionicPopup) {\n  return function (text) {\n    return $ionicPopup.alert({title: text});\n  };\n});\n","angular.module('cordovaInit', ['ionic'])\n.run(function ($ionicPlatform) {\n  $ionicPlatform.ready(function () {\n    // Hide the accessory bar by default (remove this to show the accessory bar\n    // above the keyboard for form inputs)\n    if (window.cordova && window.cordova.plugins.Keyboard) {\n      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n    }\n    if (window.StatusBar) {\n      // org.apache.cordova.statusbar required\n      StatusBar.styleDefault();\n    }\n  });\n});\n","angular.module('loading', ['ionic'])\n.factory('loading', function ($ionicLoading) {\n  return {\n    load: function (template) {\n      template = template || 'Loading...';\n      $ionicLoading.show({template: template});\n    },\n    unload: function () {\n      $ionicLoading.hide();\n    }\n  };\n});\n","angular.module('studentApp.services')\n.factory('student', function ($http, alert, $q) {\n  var api     = 'http://localhost:3000/v1';\n  var student = {};\n\n  $http.get(api).error(function (err) {\n    alert('Could not connect to server');\n  });\n\n  student.current = function () {\n    return $http.get(api + '/student/current').then(returnData);\n  };\n\n  student.login = function (uvid) {\n    if (!uvid) {\n      return $q(function (resolve, reject) {\n        reject(new Error('No UVID given'));\n      });\n    }\n    return $http.post(api + '/student/' + uvid + '/login').then(returnData);\n  };\n\n  student.logout = function () {\n    return $http.post(api + '/student/logout').then(returnData);\n  };\n\n  student.question = function () {\n    return $http.get(api + '/student/question').then(returnData);\n  };\n\n  student.answer = function (qid, value) {\n    if (typeof value === 'object') {\n      value = Object.keys(value).filter(function (value) { return value; });\n    }\n    return $http.post(api + '/student/answer/' + qid, {value: value})\n      .then(returnData);\n  };\n\n  function returnData(res) {\n    return res.data;\n  }\n\n  return student;\n\n});\n"],"sourceRoot":"/source/"}